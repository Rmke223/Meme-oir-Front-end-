{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ryankelly/Sites/aotc_project/aotc_react/src/components/Generator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Login from './login';\nimport Logo from '../img/MEME.gif';\n\nfunction Generator({\n  template,\n  userInfo,\n  setCaptions,\n  captions,\n  meme,\n  setMeme,\n  setCurrentPage\n}) {\n  _s();\n\n  const updateCaption = (e, index) => {\n    const text = e.target.value || '';\n    setCaptions(captions.map((c, i) => {\n      if (index === i) {\n        return text;\n      } else {\n        return c;\n      }\n    }));\n  };\n\n  useEffect(() => {\n    setCaptions(Array(template.box_count).fill(''));\n  }, [template]);\n\n  const generateMeme = () => {\n    const formData = new FormData();\n    formData.append('username', 'rmke223');\n    formData.append('password', 'marley123');\n    formData.append('template_id', template.id);\n    captions.forEach((c, index) => formData.append(`boxes[${index}][text]`, c));\n    fetch('https://api.imgflip.com/caption_image', {\n      method: 'Post',\n      body: formData\n    }).then(res => {\n      res.json().then(res => {\n        setMeme(prevmeme => prevmeme = res.data.url);\n        setCurrentPage(prevpage => prevpage = 'meme');\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid bg-success\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row bg-primary text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"logo py-4 text-center col-lg-9 col-sm-12\",\n          style: {\n            fontSize: 150\n          },\n          children: \"MEME\\xB7 oir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-3 col-sm-12 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img py-2 my-2\",\n            src: Logo,\n            alt: \"logo\",\n            style: {\n              height: 200,\n              width: 200\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12 col-sm-12 bg-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => setCurrentPage('profile'),\n            className: \"prof img-fluid my-2\",\n            src: userInfo.profile_img,\n            style: {\n              height: 100\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: userInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [captions.map((c, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => updateCaption(e, index),\n          placeholder: `input # ${index + 1}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-9\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: generateMeme,\n            children: \"Generate Meme!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img-fluid py-4\",\n            src: template.url,\n            alt: \"template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Generator, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Generator;\nexport default Generator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Generator\");","map":{"version":3,"sources":["/Users/ryankelly/Sites/aotc_project/aotc_react/src/components/Generator.js"],"names":["React","useEffect","Login","Logo","Generator","template","userInfo","setCaptions","captions","meme","setMeme","setCurrentPage","updateCaption","e","index","text","target","value","map","c","i","Array","box_count","fill","generateMeme","formData","FormData","append","id","forEach","fetch","method","body","then","res","json","prevmeme","data","url","prevpage","fontSize","height","width","profile_img","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,WAAtB;AAAmCC,EAAAA,QAAnC;AAA6CC,EAAAA,IAA7C;AAAmDC,EAAAA,OAAnD;AAA4DC,EAAAA;AAA5D,CAAnB,EAAiG;AAAA;;AAC7F,QAAMC,aAAa,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAChC,UAAMC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASC,KAAT,IAAkB,EAA/B;AACAV,IAAAA,WAAW,CACPC,QAAQ,CAACU,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnB,UAAIN,KAAK,KAAKM,CAAd,EAAiB;AACb,eAAOL,IAAP;AACH,OAFD,MAEO;AACH,eAAOI,CAAP;AACH;AACJ,KAND,CADO,CAAX;AASH,GAXD;;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,WAAW,CAACc,KAAK,CAAChB,QAAQ,CAACiB,SAAV,CAAL,CAA0BC,IAA1B,CAA+B,EAA/B,CAAD,CAAX;AACH,GAFQ,EAEN,CAAClB,QAAD,CAFM,CAAT;;AAIA,QAAMmB,YAAY,GAAG,MAAM;AACvB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,SAA5B;AACAF,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,WAA5B;AACAF,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BtB,QAAQ,CAACuB,EAAxC;AACApB,IAAAA,QAAQ,CAACqB,OAAT,CAAiB,CAACV,CAAD,EAAIL,KAAJ,KAAcW,QAAQ,CAACE,MAAT,CAAiB,SAAQb,KAAM,SAA/B,EAAyCK,CAAzC,CAA/B;AAEAW,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,IAAI,EAAEP;AAFqC,KAA1C,CAAL,CAGGQ,IAHH,CAGQC,GAAG,IAAI;AACXA,MAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBC,GAAG,IAAI;AACnBxB,QAAAA,OAAO,CAAC0B,QAAQ,IAAIA,QAAQ,GAAGF,GAAG,CAACG,IAAJ,CAASC,GAAjC,CAAP;AACA3B,QAAAA,cAAc,CAAC4B,QAAQ,IAAIA,QAAQ,GAAG,MAAxB,CAAd;AACH,OAHD;AAIH,KARD;AASH,GAhBD;;AAkBA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,0CAAd;AAAyD,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAA+B,YAAA,GAAG,EAAErC,IAApC;AAA0C,YAAA,GAAG,EAAC,MAA9C;AAAqD,YAAA,KAAK,EAAE;AAAEsC,cAAAA,MAAM,EAAE,GAAV;AAAeC,cAAAA,KAAK,EAAE;AAAtB;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA,kCACI;AAAK,YAAA,OAAO,EAAE,MAAM/B,cAAc,CAAC,SAAD,CAAlC;AAA+C,YAAA,SAAS,EAAC,qBAAzD;AAA+E,YAAA,GAAG,EAAEL,QAAQ,CAACqC,WAA7F;AAA0G,YAAA,KAAK,EAAE;AAAEF,cAAAA,MAAM,EAAE;AAAV;AAAjH;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAInC,QAAQ,CAACsC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAaI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAEQpC,QAAQ,CAACU,GAAT,CAAa,CAACC,CAAD,EAAIL,KAAJ,kBACT;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,QAAQ,EAAED,CAAC,IAAID,aAAa,CAACC,CAAD,EAAIC,KAAJ,CAHhC;AAII,UAAA,WAAW,EAAG,WAAUA,KAAK,GAAG,CAAE;AAJtC,WACSA,KADT;AAAA;AAAA;AAAA;AAAA,gBADJ,CAFR,eAWI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACI;AAAQ,YAAA,OAAO,EAAEU,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAgC,YAAA,GAAG,EAAEnB,QAAQ,CAACiC,GAA9C;AAAmD,YAAA,GAAG,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GArEQlC,S;;KAAAA,S;AAuET,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport Login from './login';\nimport Logo from '../img/MEME.gif'\n\nfunction Generator({ template, userInfo, setCaptions, captions, meme, setMeme, setCurrentPage }) {\n    const updateCaption = (e, index) => {\n        const text = e.target.value || '';\n        setCaptions(\n            captions.map((c, i) => {\n                if (index === i) {\n                    return text;\n                } else {\n                    return c;\n                }\n            })\n        )\n    }\n    useEffect(() => {\n        setCaptions(Array(template.box_count).fill(''));\n    }, [template])\n\n    const generateMeme = () => {\n        const formData = new FormData();\n        formData.append('username', 'rmke223');\n        formData.append('password', 'marley123');\n        formData.append('template_id', template.id);\n        captions.forEach((c, index) => formData.append(`boxes[${index}][text]`, c));\n\n        fetch('https://api.imgflip.com/caption_image', {\n            method: 'Post',\n            body: formData\n        }).then(res => {\n            res.json().then(res => {\n                setMeme(prevmeme => prevmeme = res.data.url)\n                setCurrentPage(prevpage => prevpage = 'meme')\n            })\n        });\n    }\n\n    return (\n        <div>\n            <div className=\"container-fluid bg-success\">\n                <div className=\"row bg-primary text-white\">\n                    <h1 className=\"logo py-4 text-center col-lg-9 col-sm-12\" style={{ fontSize: 150 }}>MEME· oir</h1>\n                    <div className=\"col-lg-3 col-sm-12 text-center\">\n                        <img className=\"img py-2 my-2\" src={Logo} alt=\"logo\" style={{ height: 200, width: 200 }} />\n                    </div>\n                </div>\n                <div className=\"row text-center\">\n                    <div className=\"col-lg-12 col-sm-12 bg-success\">\n                        <img onClick={() => setCurrentPage('profile')} className=\"prof img-fluid my-2\" src={userInfo.profile_img} style={{ height: 100 }} />\n                        <p>{userInfo.name}</p>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    {\n                        captions.map((c, index) => (\n                            <input\n                                key={index}\n                                type=\"text\"\n                                onChange={e => updateCaption(e, index)}\n                                placeholder={`input # ${index + 1}`}\n                            />\n                        ))\n                    }\n                    <div className=\"col-9\">\n                        <button onClick={generateMeme}>Generate Meme!</button>\n                        <img className=\"img-fluid py-4\" src={template.url} alt=\"template\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Generator\n"]},"metadata":{},"sourceType":"module"}