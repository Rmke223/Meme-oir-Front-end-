{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ryankelly/Sites/aotc_project/aotc_react/src/components/Meme.js\";\nimport React from 'react';\n\nfunction Meme({\n  meme,\n  userInfo\n}) {\n  const userId = userInfo.id;\n\n  function archiveMeme(event) {\n    event.preventDefault();\n    const url = 'http://localhost:8000/show';\n    const method = 'post';\n    const headers = {\n      'Content-Type': 'application/json;charset=UTF-8',\n      'Access-Control-Allow-Origin': '*'\n    };\n    const body = {\n      users_id: {},\n      email: userEmail,\n      password: userPassword,\n      profile_img: profilePic,\n      bio: userBio\n    };\n    const data = {\n      name: username,\n      email: userEmail,\n      password: userPassword,\n      profile_img: profilePic,\n      bio: userBio\n    };\n    axios({\n      url,\n      method,\n      headers,\n      body,\n      data\n    }).then(res => console.log(res)).catch(err => console.log('error: ', err));\n    setCurrentPage('login');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: meme,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => archiveMeme(),\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Meme;\nexport default Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"sources":["/Users/ryankelly/Sites/aotc_project/aotc_react/src/components/Meme.js"],"names":["React","Meme","meme","userInfo","userId","id","archiveMeme","event","preventDefault","url","method","headers","body","users_id","email","userEmail","password","userPassword","profile_img","profilePic","bio","userBio","data","name","username","axios","then","res","console","log","catch","err","setCurrentPage"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAd,EAAgC;AAC5B,QAAMC,MAAM,GAAGD,QAAQ,CAACE,EAAxB;;AACA,WAASC,WAAT,CAAqBC,KAArB,EAA2B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,GAAG,GAAG,4BAAZ;AACA,UAAMC,MAAM,GAAG,MAAf;AACA,UAAMC,OAAO,GAAG;AACZ,sBAAe,gCADH;AAEZ,qCAA8B;AAFlB,KAAhB;AAKA,UAAMC,IAAI,GAAE;AAACC,MAAAA,QAAQ,EAAC,EAAV;AAAcC,MAAAA,KAAK,EAACC,SAApB;AAA+BC,MAAAA,QAAQ,EAACC,YAAxC;AAAsDC,MAAAA,WAAW,EAACC,UAAlE;AAA8EC,MAAAA,GAAG,EAACC;AAAlF,KAAZ;AACA,UAAMC,IAAI,GAAE;AAACC,MAAAA,IAAI,EAACC,QAAN;AAAgBV,MAAAA,KAAK,EAACC,SAAtB;AAAiCC,MAAAA,QAAQ,EAACC,YAA1C;AAAwDC,MAAAA,WAAW,EAACC,UAApE;AAAgFC,MAAAA,GAAG,EAACC;AAApF,KAAZ;AACAI,IAAAA,KAAK,CAAC;AACFhB,MAAAA,GADE;AAEFC,MAAAA,MAFE;AAGFC,MAAAA,OAHE;AAIFC,MAAAA,IAJE;AAKFU,MAAAA;AALE,KAAD,CAAL,CAOCI,IAPD,CAOMC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPb,EAQCG,KARD,CAQOC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,GAAvB,CARd;AASAC,IAAAA,cAAc,CAAC,OAAD,CAAd;AACH;;AAGG,sBACI;AAAA,4BACI;AAAK,MAAA,GAAG,EAAE9B,IAAV;AAAgB,MAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAII,WAAW,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KAhCQL,I;AAkCT,eAAeA,IAAf","sourcesContent":["import React from 'react'\n\nfunction Meme({meme, userInfo}) {\n    const userId = userInfo.id\n    function archiveMeme(event){\n    event.preventDefault();\n    const url = 'http://localhost:8000/show'\n    const method = 'post'\n    const headers = {\n        'Content-Type':'application/json;charset=UTF-8',\n        'Access-Control-Allow-Origin':'*'\n    }\n\n    const body ={users_id:{}, email:userEmail, password:userPassword, profile_img:profilePic, bio:userBio}\n    const data ={name:username, email:userEmail, password:userPassword, profile_img:profilePic, bio:userBio}\n    axios({\n        url,\n        method,\n        headers,\n        body,\n        data\n    })\n    .then(res => console.log(res))\n    .catch(err => console.log('error: ', err))\n    setCurrentPage('login')\n} \n\n\n    return (\n        <div>\n            <img src={meme} alt=\"\"/>\n            <button onClick={()=>archiveMeme()}>Save</button>\n        </div>\n    )\n}\n\nexport default Meme\n"]},"metadata":{},"sourceType":"module"}