{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ryankelly/Sites/aotc_project/aotc_react/src/components/Generator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Login from './login';\n\nfunction Generator({\n  template,\n  userInfo,\n  setCaptions,\n  captions\n}) {\n  _s();\n\n  const updateCaption = (e, index) => {\n    const text = e.target.value || '';\n    setCaptions(captions.map((c, i) => {\n      if (index === i) {\n        return text;\n      } else {\n        return c;\n      }\n    }));\n  };\n\n  useEffect(() => {\n    setCaptions(Array(template.box_count).fill(''));\n  }, [template]);\n\n  const generateMeme = () => {\n    const formData = new FormData();\n    formData.append('username', 'rmke223');\n    formData.append('password', 'marley123');\n    formData.append('template_id', template.id);\n    captions.forEach((c, index) => formData.append(`boxes[${index}][text]`, c));\n    fetch('https://api.imgflip.com/caption_image', {\n      method: 'Post',\n      body: formData\n    }).then(res => {\n      res.json().then(res => {\n        console.log(res.url);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid bg-success\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"py-4 text-center col-9\",\n          children: \"MayMay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3 bg-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img-fluid py-2\",\n            src: userInfo.profile_img,\n            style: {\n              height: 100\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: userInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [captions.map((c, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => updateCaption(e, index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateMeme,\n          children: \"Generate Meme!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid py-4\",\n          src: template.url,\n          alt: \"template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Generator, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Generator;\nexport default Generator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Generator\");","map":{"version":3,"sources":["/Users/ryankelly/Sites/aotc_project/aotc_react/src/components/Generator.js"],"names":["React","useEffect","Login","Generator","template","userInfo","setCaptions","captions","updateCaption","e","index","text","target","value","map","c","i","Array","box_count","fill","generateMeme","formData","FormData","append","id","forEach","fetch","method","body","then","res","json","console","log","url","profile_img","height","name"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport Login from './login';\n\nfunction Generator({template, userInfo, setCaptions, captions}) {\n    const updateCaption = (e, index) => {\n        const text= e.target.value || '';\n        setCaptions(\n            captions.map((c, i) =>{\n                if(index === i){\n                    return text;\n                } else {\n                    return c;\n                }\n            })\n        )\n    }\n    useEffect(()=>{\n        setCaptions(Array(template.box_count).fill(''));\n    },[template])\n    \n    const generateMeme = () =>{\n        const formData = new FormData();\n        formData.append('username', 'rmke223');\n        formData.append('password', 'marley123');\n        formData.append('template_id', template.id);\n        captions.forEach((c, index)=> formData.append(`boxes[${index}][text]`, c));\n\n        fetch('https://api.imgflip.com/caption_image', {\n            method: 'Post',\n            body: formData\n        }).then(res=> {\n            res.json().then(res => {\n                console.log(res.url)\n            })\n        });\n    }\n    return (\n        <div>\n            <div className=\"container-fluid bg-success\">\n                <div className=\"row\">\n                    <h1 className=\"py-4 text-center col-9\">MayMay</h1>\n                    <div className=\"col-3 bg-success\">\n                        <img className=\"img-fluid py-2\" src={userInfo.profile_img} style={{ height: 100 }} />\n                        <p>{userInfo.name}</p>\n                    </div>\n                </div>\n                <div className=\"container\">\n                {\n                    captions.map((c, index) =>(\n                        <input \n                        key={index} \n                        type=\"text\"\n                        onChange={e=> updateCaption(e, index)}    \n                        />\n                    ))\n                }\n                <button onClick={generateMeme}>Generate Meme!</button>\n                <img className=\"img-fluid py-4\" src={template.url} alt=\"template\"/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Generator\n"]},"metadata":{},"sourceType":"module"}